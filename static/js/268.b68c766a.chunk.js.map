{"version":3,"file":"static/js/268.b68c766a.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","webpack://react-homework-template/./src/components/Input/Input.module.css?1f33","components/Input/Input.jsx","webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__wiIYs\",\"normal\":\"Button_normal__napcR\",\"cover\":\"Button_cover__3JiED\",\"cancel\":\"Button_cancel__wF8TH\",\"typo\":\"Button_typo__PVTG3\"};","import css from './Button.module.css';\n\nexport const Button = ({\n  type,\n  onclick,\n  variant,\n  className='',\n  children}) => { \n\n  return (\n    <button \n    type={type}\n    className={`\n      ${css[variant] || css.normal} \n      ${css.typo}\n      ${css.button}\n      ${className}`}\n      onClick={onclick} >\n      {children}\n    </button>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Input_label__NXpCD\",\"subLabel\":\"Input_subLabel__svgQ-\",\"input\":\"Input_input__E5rzA\",\"visible\":\"Input_visible__hsj0z\",\"notValid\":\"Input_notValid__XnilC\"};","import { useState } from 'react';\nimport css from './Input.module.css';\nimport { Icon } from 'components/Icon/Icon';\n\n\nexport const Input = ({ type, name, children }) => {\n    const [showPassword, setShowPassword] = useState(false);\n    const [visibleIcon, setVisibleIcon] = useState(false);\n    const [value, setValue] = useState('');\n\n    const visible = () => setShowPassword(!showPassword);\n    const clear = () => {\n        setValue('')\n        setVisibleIcon(false);\n    };\n    const input = (e) => {\n        const data = e.target.value;\n        data ? setVisibleIcon(true) : setVisibleIcon(false);\n        setValue(data);\n    };\n\n    const child = () => {\n        switch (type) {\n            case 'password':\n                return (\n                    <>\n                        <input\n                            type={(showPassword && 'text') || type}\n                            name={name}\n                            placeholder={children}\n                            className={css.input}\n                            value={value}\n                            onChange={input}\n                        />\n                        <span className={css.visible} onClick={visible}>{visibleIcon && (!showPassword ? <Icon icon='eyeOff' /> : <Icon icon='eye' />)}</span>\n                    </>\n                )\n\n            default:\n                return (\n                    <><input\n                        type={type} placeholder={children}\n                        name={name}\n                        className={css.input}\n                        value={value}\n                        onChange={input}\n                    />\n                        <span className={css.visible} onClick={clear}>{visibleIcon && (<Icon icon='error' />)}</span>\n                    </>\n                )\n        }\n    }\n\n    return (\n        <label className={css.label}>\n            {child()}\n        </label>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__gPEx5\",\"formHeader\":\"LoginForm_formHeader__1dYuY\",\"header\":\"LoginForm_header__SClA8\",\"subHeader\":\"LoginForm_subHeader__XPp5z\",\"button\":\"LoginForm_button__LodJg\",\"anchor\":\"LoginForm_anchor__X430+\"};","// import { useDispatch } from 'react-redux';\n// import { logIn } from '../../redux/auth/authOperations';\nimport { Input } from 'components/Input/Input';\nimport css from './LoginForm.module.css';\nimport { Button } from 'components/Button/Button';\nimport { NavLink } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from \"../../redux/auth/authOperations\";\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n\n      })\n    );\n\n    form.reset();\n  };\n\n  return (\n    <>\n      <div className={css.formHeader}>\n        <h3 className={css.header}>Sign In</h3>\n        <p className={css.subHeader}>Welcome back to effortless expense tracking! Your financial<br />dashboard awaits.</p>\n      </div>\n      <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n        <Input type='email' name='email'>Email</Input>\n        <Input type='password' name='password'>Password</Input>\n        <span className={css.button}>\n          <Button type=\"submit\" variant='cover'>Sign In</Button>\n          <label className={css.subHeader}>Dont't have an account? <NavLink to='/signup' className={css.anchor}>Sign Up</NavLink></label>\n        </span>\n      </form>\n    </>\n  );\n};\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </HelmetProvider>\n  );\n};\n\nexport default LoginPage;\n"],"names":["Button","_ref","type","onclick","variant","className","children","_jsx","concat","css","onClick","Input","name","showPassword","setShowPassword","useState","visibleIcon","setVisibleIcon","value","setValue","visible","clear","input","e","data","target","_jsxs","_Fragment","placeholder","onChange","Icon","icon","LoginForm","dispatch","useDispatch","onSubmit","preventDefault","form","currentTarget","logIn","email","elements","password","reset","autoComplete","NavLink","to","LoginPage","HelmetProvider","Helmet"],"sourceRoot":""}